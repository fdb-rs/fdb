var searchIndex = JSON.parse('{\
"fdb":{"doc":"FoundationDB Client API for Tokio","t":[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,17,3,3,3,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,0,5,5,5,5,0,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,17,3,6,17,17,17,17,17,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,6,8,6,6,6,6,3,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,3,3,13,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,3,3,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,8,13,13,13,13,13,13,13,13,13,13,13,13,8,13,13,4,3,13,13,13,10,11,10,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,10,11,10,11,10,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,11,11,11,11,11,10,11,10,11,11,11,11,10,11,11,10,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,12,12,12,12,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5],"n":["BuggifyDisable","BuggifyEnable","BuggifySectionActivatedProbability","BuggifySectionFiredProbability","CallbacksOnExternalThreads","ClientBuggifyDisable","ClientBuggifyEnable","ClientBuggifySectionActivatedProbability","ClientBuggifySectionFiredProbability","ClientThreadsPerVersion","ClusterFile","DisableClientStatisticsLogging","DisableLocalClient","DisableMultiVersionClientApi","EnableRunLoopProfiling","EnableSlowTaskProfiling","ExternalClientDirectory","ExternalClientLibrary","FDB_API_VERSION","Key","KeySelector","KeyValue","Knob","LocalAddress","NetworkOption","TLSCaBytes","TLSCaPath","TLSCertBytes","TLSCertPath","TLSKeyBytes","TLSKeyPath","TLSPassword","TLSPlugin","TLSVerifyPeers","TraceClockSource","TraceEnable","TraceFileIdentifier","TraceFormat","TraceLogGroup","TraceMaxLogsSize","TraceRollSize","Value","add","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","database","eq","eq","error","first_greater_or_equal","first_greater_than","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","future","get","get_key","get_key_ref","get_offset","get_value_ref","into","into","into","into","into","into_key","into_parts","into_value","last_less_or_equal","last_less_than","ne","ne","new","open_database","range","select_api_version","set_network_option","start_network","stop_network","subspace","to_owned","to_owned","to_owned","to_owned","to_owned","transaction","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tuple","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","DatabaseOption","DatacenterId","FdbDatabase","LocationCacheSize","MachineId","MaxWatches","SnapshotRywDisable","SnapshotRywEnable","TransactionBypassUnreadable","TransactionCausalReadRisky","TransactionIncludePortInAddress","TransactionLoggingMaxFieldLength","TransactionMaxRetryDelay","TransactionRetryLimit","TransactionSizeLimit","TransactionTimeout","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create_transaction","drop","fmt","fmt","from","from","get_boundary_keys","into","into","read","run","set_option","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","0","0","0","0","0","0","DATABASE_OPEN","FdbError","FdbResult","SUBSPACE_PACK_WITH_VERSIONSTAMP_PREFIX_INCOMPLETE","SUBSPACE_UNPACK_KEY_MISMATCH","TUPLE_FROM_BYTES","TUPLE_GET","TUPLE_KEY_UTIL_STRINC_ERROR","TUPLE_PACK_WITH_VERSIONSTAMP_MULTIPLE_FOUND","TUPLE_PACK_WITH_VERSIONSTAMP_NOT_FOUND","borrow","borrow_mut","clone","clone_into","code","eq","fmt","fmt","from","into","is_maybe_committed","is_retryable","is_retryable_not_committed","ne","new","to_owned","to_string","try_from","try_into","type_id","FdbFuture","FdbFutureCStringArray","FdbFutureGet","FdbFutureI64","FdbFutureKey","FdbFutureMaybeValue","FdbFutureUnit","FdbStreamKeyValue","borrow","borrow","borrow_mut","borrow_mut","drop","fmt","fmt","from","from","get","into","into","into_future","is_ready","poll","poll_next","try_from","try_from","try_into","try_into","try_poll","try_poll_next","type_id","type_id","Exact","Iterator","Large","Medium","Range","RangeOptions","Serial","Small","StreamingMode","WantAll","begin","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","end","eq","eq","fmt","fmt","fmt","from","from","from","get_limit","get_mode","get_reverse","into","into","into","into_stream","ne","new","set_limit","set_mode","set_reverse","starts_with","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Subspace","borrow","borrow_mut","clone","clone_into","cmp","contains","eq","fmt","from","into","ne","new","pack","pack_with_versionstamp","partial_cmp","range","subspace","to_owned","try_from","try_into","type_id","unpack","AccessSystemKeys","Add","And","AppendIfFits","AutoThrottleTag","BitAnd","BitOr","BitXor","BypassUnreadable","ByteMax","ByteMin","CausalReadDisable","CausalReadRisky","CausalWriteRisky","CommittedVersion","CompareAndClear","DebugRetryLogging","DebugTransactionIdentifier","DurabilityDatacenter","DurabilityDevNullIsWebScale","DurabilityRisky","FdbReadTransaction","FdbTransaction","IncludePortInAddress","InitializeNewDatabase","LockAware","LogTransaction","Max","MaxRetryDelay","Min","MutationType","NextWriteNoWriteConflictRange","Or","PriorityBatch","PrioritySystemImmediate","ReadAheadDisable","ReadLockAware","ReadSystemKeys","ReadTransaction","ReadYourWritesDisable","ReportConflictingKeys","RetryLimit","ServerRequestTracing","SetVersionstampedKey","SetVersionstampedValue","SizeLimit","SnapshotRywDisable","SnapshotRywEnable","SpecialKeySpaceRelaxed","Tag","Timeout","Transaction","TransactionLoggingEnable","TransactionLoggingMaxFieldLength","TransactionOption","TransactionVersionstamp","UseProvisionalProxies","UsedDuringCommitProtectionDisable","Xor","add_read_conflict_key","add_read_conflict_key","add_read_conflict_range","add_read_conflict_range","add_write_conflict_key","add_write_conflict_key","add_write_conflict_range","add_write_conflict_range","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","cancel","clear","clear","clear_range","clear_range","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","commit","commit","drop","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get","get","get","get","get_addresses_for_key","get_addresses_for_key","get_addresses_for_key","get_approximate_size","get_approximate_size","get_committed_version","get_committed_version","get_estimated_range_size_bytes","get_estimated_range_size_bytes","get_estimated_range_size_bytes","get_inner_future","get_key","get_key","get_key","get_range","get_range","get_range","get_read_version","get_read_version","get_read_version","get_versionstamp","get_versionstamp","into","into","into","into","into","into","mutate","mutate","on_error","on_error","on_error","read","read","reset","reset","run","set","set","set_option","set_option","set_option","set_read_version","set_read_version","set_read_version","snapshot","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","watch","watch","0","0","0","0","0","0","0","0","0","0","Tuple","Versionstamp","add_bigint","add_bool","add_bytes","add_f32","add_f64","add_i16","add_i32","add_i64","add_i8","add_null","add_string","add_tuple","add_uuid","add_versionstamp","append","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","complete","default","eq","eq","fmt","fmt","from","from","from_bytes","from_bytes","get_bigint","get_bool","get_bytes","get_bytes_ref","get_f32","get_f64","get_i16","get_i32","get_i64","get_i8","get_null","get_string_ref","get_transaction_version","get_tuple_ref","get_user_version","get_uuid_ref","get_versionstamp_ref","has_incomplete_versionstamp","incomplete","into","into","is_complete","is_empty","key_util","ne","new","pack","pack_with_versionstamp","partial_cmp","partial_cmp","range","size","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","key_after","starts_with","strinc"],"q":["fdb","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fdb::NetworkOption","","","","","","","","","","","","","","","","","","","","","","","","","","fdb::database","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fdb::database::DatabaseOption","","","","","","","","","fdb::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fdb::future","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fdb::range","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fdb::subspace","","","","","","","","","","","","","","","","","","","","","","","fdb::transactionfdb::transaction::TransactionOption","","","","","","","","","","fdb::tuple","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fdb::tuple::key_util","",""],"d":["","","probability expressed as a percentage between 0 and 100","probability expressed as a percentage between 0 and 100","If set, callbacks from external client libraries can be …","Disable client buggify","Enable client buggify - will make requests randomly fail …","probability expressed as a percentage between 0 and 100","probability expressed as a percentage between 0 and 100","Number of client threads to be spawned.  Each cluster will …","path to cluster file","Disables logging of client statistics, such as sampled …","Prevents connections through the local client, allowing …","Disables the multi-version client API and instead uses the …","Enables debugging feature to perform run loop profiling. …","Deprecated","path to directory containing client libraries","path to client library","Maximum API version supported by the client","<code>Key</code> represents a FDB key, a lexicographically-ordered …","<code>KeySelector</code> identifies a particular key in the database.","A key/value pair.","knob_name=knob_value","IP:PORT","A set of options that can be set globally for the FDB API.","ca bundle","file path","certificates","file path","key","file path","key passphrase","file path or linker-resolved name","verification pattern","Trace clock source","path to output directory (or NULL for current working …","The identifier that will be part of all trace file names","Format of trace files","value of the LogGroup attribute","max total size of trace files","max size of a single trace output file","<code>Value</code> represents a value of an FDB <code>Key</code> and is a sequence …","Returns a new <code>KeySelector</code> offset by a given number of keys …","","","","","","","","","","","","","","","","","","","","","Provides <code>FdbDatabase</code> type for working with FDB Database.","","","Provides <code>FdbError</code> type, <code>FdbResult</code> type alias and error …","Creates a <code>KeySelector</code> that picks the first key greater …","Creates a <code>KeySelector</code> that picks the first key greater …","","","","","","","","","","","","","","Provides <code>FdbFuture</code>, <code>FdbStreamKeyValue</code> types and …","","Returns a reference to the key that serves as the anchor …","Gets a reference to <code>Key</code> from <code>KeyValue</code>.","Returns the key offset parameter for this <code>KeySelector</code>.","Gets a reference to <code>Value</code> from <code>KeyValue</code>.","","","","","","Extract <code>Key</code> from <code>KeyValue</code>.","Extract <code>Key</code> and <code>Value</code> from <code>KeyValue</code>.","Extract <code>Value</code> from <code>KeyValue</code>.","Creates a <code>KeySelector</code> that picks the last key less than or …","Creates a <code>KeySelector</code> that picks the last key less than …","","","Create a new <code>KeySelector</code> from the given parameters.","Returns <code>FdbDatabase</code> handle to the FDB cluster identified by","Provides types for working with FDB range.","Select the version of the client API.","Set global options for the FDB API.","Initializes FDB network.","Stops the FDB networking engine.","Provides a convenient way to define namespaces for …","","","","","","Provides types and traits for working with FDB …","","","","","","","","","","","Provides a set of utilities for serializing and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A set of options that can be set on a <code>FdbDatabase</code>.","Hexadecimal ID","A mutable, lexicographically ordered mapping from binary …","Max location cache entries","Hexadecimal ID","Max outstanding watches","Snapshot read operations will not see the results of …","Snapshot read operations will see the results of writes …","Allows <code>get</code> operations to read from sections of keyspace …","The read version will be committed, and usually will be …","Addresses returned by get_addresses_for_key include the …","Maximum length of escaped key and value fields.","value in milliseconds of maximum delay","number of times to retry","value in bytes","value in milliseconds of timeout","","","","","","","","","Creates a <code>FdbTransaction</code> that operates on this <code>FdbDatabase</code>.","","","","","","Returns an array of <code>Key</code>s <code>k</code> such that <code>begin &lt;= k &lt; end</code> and <code>k</code>…","","","Runs a closure in the context that takes a …","Runs a closure in the context that takes a <code>FdbTransaction</code>.","Set options on a <code>FdbDatabase</code>.","","","","","","","","","","","","","","","","","","Error occurred while opening database.","Error type for this crate.","Alias for <code>Result</code><code>&lt;T,</code><code>FdbError</code><code>&gt;</code>","Error occured when trying to pack <code>Subspace</code> containing an …","Error occured when trying to unpack a key. The provided …","Error occurred extracting a <code>Tuple</code> value from <code>Bytes</code>.","Error occurred while getting a value from the tuple.","Error occurred when calling <code>strinc</code>, as the <code>prefix</code> supplied …","Error occured when trying to pack <code>Tuple</code> containing an …","Error occured when trying to pack <code>Tuple</code> containing an …","","","","","Returns raw FDB error code","","","","","","Returns true if the error indicates the transaction may …","Returns <code>true</code> if the error indicates the operations in the …","Returns <code>true</code> if the error indicates the transaction has not","","Create new <code>FdbError</code>","","","","","","A <code>FdbFuture</code> represents a value (or error) to be available …","Represents the asynchronous result of a function that …","Extracts value that are owned by <code>FdbFuture</code>.","Represents the asynchronous result of a function that …","Represents the asynchronous result of a function that …","Represents the asynchronous result of a function that <em>maybe</em>","Represents the asynchronous result of a function that has …","A stream of <code>KeyValue</code>s.","","","","","","","","","","Extract value that are owned by <code>FdbFuture</code>.","","","","Returns <code>true</code> if the FDB future is ready, <code>false</code> otherwise, …","","","","","","","","","","","Infrequently used. The client has passed a specific row …","The default. The client doesn’t know how much of the …","Infrequently used. Transfer data in batches large enough …","Infrequently used. Transfer data in batches sized in …","<code>Range</code> describes an exact range of keyspace, specified by a …","<code>RangeOptions</code> specify how a database range operation is …","Transfer data in batches large enough that an individual …","Infrequently used. Transfer data in batches small enough …","Options that control the way the Rust binding performs …","Client intends to consume the entire range and would like …","Return the beginning of the range.","","","","","","","","","","","","","","Return the end of the range.","","","","","","","","","Get limit","Get streaming mode","Get the read order (lexicographic or non-lexicographic)","","","","Gets an ordered range of keys and values from the database.","","Construct a new <code>Range</code> with an inclusive begin key an …","Set limit","Set streaming mode","Set the read order (lexicographic or non-lexicographic)","Return a <code>Range</code> that describes all possible keys that are …","","","","","","","","","","","","","Subspace provides a convenient way to use <code>Tuple</code> to define …","","","","","","Tests whether the specified key starts with this <code>Subspace</code>…","","","","","","Create a new <code>Subspace</code> with prefix <code>Bytes</code> and an empty …","Get the key encoding prefix used for this <code>Subspace</code>.","Get the key encoding of the specified <code>Tuple</code> in this …","","Gets a <code>Range</code> representing all keys in the <code>Subspace</code> …","Gets a new subspace which is equivalent of this subspace …","","","","","Gets the <code>Tuple</code> encoded by the given key, with this <code>Subspace</code>…","Allows this transaction to read and modify system keys …","addend","value with which to perform bitwise and","value to append to the database value","String identifier used to associated this transaction with …","value with which to perform bitwise and","value with which to perform bitwise or","value with which to perform bitwise xor","Allows <code>get</code> operations to read from sections of keyspace …","value to check against database value","value to check against database value","","The read version will be committed, and usually will be …","The transaction, if not self-conflicting, may be committed …","Committed version of the <code>Transaction</code>.","Value to compare with","Optional transaction name","String identifier to be used when tracing or profiling …","","Deprecated","","A handle to a FDB snapshot, suitable for performing …","A handle to a FDB transaction.","Addresses returned by get_addresses_for_key include the …","This is a write-only transaction which sets the initial …","The transaction can read and write to locked databases, …","Enables tracing for this transaction and logs results to …","value to check against database value","value in milliseconds of maximum delay","value to check against database value","A set of operations that can be performed atomically on a …","The next write performed on this transaction will not …","value with which to perform bitwise or","Specifies that this transaction should be treated as low …","Specifies that this transaction should be treated as …","Deprecated","The transaction can read from locked databases.","Allows this transaction to read system keys (those that …","A read-only subset of a FDB <code>Transaction</code>.","Reads performed by a transaction will not see any prior …","The transaction can retrieve keys that are conflicting …","number of times to retry","Sets an identifier for server tracing of this transaction. …","value to which to set the transformed key","value to versionstamp and set","value in bytes","Snapshot read operations will not see the results of …","Snapshot read operations will see the results of writes …","By default, the special key space will only allow users to …","String identifier used to associated this transaction with …","value in milliseconds of timeout","A <code>Transaction</code> represents a FDB database transaction.","String identifier to be used in the logs when tracing this …","Maximum length of escaped key and value fields.","A set of options that can be set on a <code>FdbTransaction</code>.","<code>fdb_c</code> client level versionstamp.","This option should only be used by tools which change the …","By default, operations that are performed on a transaction …","value with which to perform bitwise xor","Adds a key to the transaction’s read conflict ranges as …","","Adds a range of keys to the transaction’s read conflict …","","Adds a key to the transaction’s write conflict ranges as …","","Adds a range of keys to the transaction’s write conflict …","","","","","","","","","","","","","","Cancels the <code>Transaction</code>.","","Clears a given key from the database.","","Clears a range of keys from the database.","","","","","","","","","","Commit this <code>Transaction</code>.","","","","","","","","","","","","","","","Gets a value from the database.","Get <code>fdb_c</code> client level versionstamp.","","","Get a list of public network addresses as <code>CString</code>, one for …","","","Returns a future that will contain the approximated size of","","Gets the version number at which a successful commit …","","Gets an estimate for the number of bytes stored in the …","","","Gets the inner <code>FdbFutureKey</code> while dropping the inner …","Returns the key referenced by the specificed <code>KeySelector</code>.","","","Gets an ordered range of keys and values from the database.","","","Gets the version at which the reads for this <code>Transaction</code> …","","","Returns <code>TransactionVersionstamp</code> from which you can get the …","","","","","","","","An atomic operation is a single database command that …","","Determines whether an error returned by a <code>Transaction</code> or …","","","Runs a closure in the context of <code>FdbReadTransaction</code>, …","Runs a closure in the context of this <code>FdbReadTransaction</code>.","Reset the <code>Transaction</code>.","","Runs a closure in the context of this <code>FdbTransaction</code>.","Sets the value for a given key.","","Set options on a <code>Transaction</code> or <code>ReadTransaction</code>","","","Directly sets the version of the database at which to …","","","Return a special-purpose, read-only view of the database (…","","","","","","","","","","","","","","","","","","","","","","","Creates a watch that will become ready when it reports a …","","","","","","","","","","","","Represents a set of elements that make up a sortable, …","Used to represent values written by versionstamp …","Append <code>BigInt</code> value to the <code>Tuple</code>","Append <code>bool</code> value to the <code>Tuple</code>.","Append <code>Bytes</code> value to the <code>Tuple</code>.","Append <code>f32</code> value to the <code>Tuple</code>.","Append <code>f64</code> value to the <code>Tuple</code>.","Append <code>i16</code> value to the <code>Tuple</code>.","Append <code>i32</code> value to the <code>Tuple</code>","Append <code>i64</code> value to the <code>Tuple</code>","Append <code>i8</code> value to the <code>Tuple</code>.","Append FDB Tuple <code>null</code> value to <code>Tuple</code>.","Append <code>String</code> value to the <code>Tuple</code>.","Append <code>Tuple</code> value to the <code>Tuple</code>","Append <code>Uuid</code> value to the <code>Tuple</code>.","Append <code>Versionstamp</code> value to the <code>Tuple</code>    ","Append elements of <code>Tuple</code> <code>t</code> to <code>Tuple</code> <code>Self</code>","","","","","","","","","","","Creates a complete <code>Versionstamp</code> instance with the given …","","","","","","","","Creates a value of <code>Versionstamp</code> type based on the given …","Construct a new <code>Tuple</code> with elements decoded from a …","Gets an indexed item as <code>BigInt</code>.","Gets an indexed item as <code>bool</code>.","Retrieve a byte representation of this <code>Versionstamp</code>.","Gets an indexed item as <code>Bytes</code> ref.","Gets an indexed item as <code>f32</code>.","Gets an indexed item as <code>f64</code>.","Gets an indexed item as <code>i16</code>.","Gets an indexed item as <code>i32</code>.","Gets an indexed item as <code>i64</code>.","Gets an indexed item as <code>i8</code>.","Gets an indexed item as FDB Tuple <code>null</code> value.","Gets an indexed item as <code>String</code> ref.","Retrieve the portion of this <code>Versionstamp</code> that is set by …","Gets an indexed item as <code>Tuple</code> ref.","Retrieve the portion of this <code>Versionstamp</code> that is set by …","Gets an indexed item as <code>Uuid</code> ref.","Gets an indexed item as <code>Versionstamp</code> ref.","Determines if there is a <code>Versionstamp</code> included in this …","Creates an incomplete <code>Versionstamp</code> instance with the given …","","","Whether this <code>Versionstamp</code>’s transaction version is …","Determine if this <code>Tuple</code> contains no elements.","Utility functions for operating on <code>Key</code>.","","Create a new empty <code>Tuple</code>.","Get an encoded representation of this <code>Tuple</code>.","Get an encoded representation of this <code>Tuple</code> for use with …","","","Returns a range representing all keys that encode <code>Tuple</code>s …","Gets the number of elements in this <code>Tuple</code>.","","","","","","","","","Computes the key that would sort immediately after <code>key</code>.","Checks if <code>key</code> starts with <code>prefix</code>.","Computes the first key that would sort outside the range …"],"i":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,3,4,5,2,1,3,4,5,2,1,3,4,5,2,1,3,4,5,2,1,0,3,4,0,2,2,3,4,5,2,1,6,3,3,4,4,5,2,1,0,3,2,5,2,5,3,4,5,2,1,5,5,5,2,2,3,4,2,0,0,0,0,0,0,0,3,4,5,2,1,0,3,4,5,2,1,3,4,5,2,1,0,3,4,5,2,1,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,0,33,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,34,33,34,33,34,33,34,34,34,33,34,33,34,34,33,34,34,34,34,33,34,33,34,33,34,33,34,35,36,37,38,39,40,41,42,43,0,0,0,0,0,0,0,0,0,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,0,0,0,0,0,0,45,46,45,46,45,45,46,45,46,47,45,46,45,45,45,46,45,46,45,46,45,46,45,46,48,48,48,48,0,0,48,48,0,48,49,48,49,50,48,49,50,48,49,50,48,49,50,50,49,48,49,48,49,50,48,49,50,50,50,50,48,49,50,49,49,49,50,50,50,49,48,49,50,48,49,50,48,49,50,48,49,50,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,52,53,53,53,52,53,53,53,52,53,53,52,52,52,0,53,52,52,52,52,52,0,0,52,52,52,52,53,52,53,0,52,53,52,52,52,52,52,0,52,52,52,52,53,53,52,52,52,52,52,52,0,52,52,0,0,52,52,53,54,55,54,55,54,55,54,55,52,53,56,57,55,58,52,53,56,57,55,58,54,55,54,55,54,55,52,53,55,58,52,53,55,58,54,55,55,52,53,56,57,55,58,52,53,56,57,55,58,59,57,55,58,59,55,58,54,55,54,55,59,55,58,57,59,55,58,59,55,58,59,55,58,54,55,52,53,56,57,55,58,54,55,59,55,58,55,58,54,55,55,54,55,59,55,58,59,55,58,55,52,53,55,58,52,53,56,57,55,58,52,53,56,57,55,58,52,53,56,57,55,58,54,55,60,61,62,63,64,65,66,67,68,69,0,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,70,70,71,70,70,70,70,70,70,70,70,70,71,70,71,70,70,70,71,71,70,71,70,0,71,70,70,70,71,70,70,70,71,70,71,70,71,70,71,70,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i32",15]],["keyselector",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["key",3]],[[],["value",3]],[[],["keyvalue",3]],[[],["keyselector",3]],[[],["networkoption",4]],[[]],[[]],[[]],[[]],[[]],null,[[["key",3]],["bool",15]],[[["value",3]],["bool",15]],null,[[],["keyselector",3]],[[],["keyselector",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["committedversion",3]],["fdbresult",6,[["i64",15]]]],[[]],[[["bytes",3]],["key",3]],[[["bytes",3]],["value",3]],[[]],[[]],[[]],[[]],null,[[],["fdbresult",6,[["key",3]]]],[[],["key",3]],[[],["key",3]],[[],["i32",15]],[[],["value",3]],[[]],[[]],[[]],[[]],[[]],[[],["key",3]],[[]],[[],["value",3]],[[],["keyselector",3]],[[],["keyselector",3]],[[["key",3]],["bool",15]],[[["value",3]],["bool",15]],[[["bool",15],["i32",15]],["keyselector",3]],[[],["fdbresult",6,[["fdbdatabase",3]]]],null,[[["i32",15]]],[[["networkoption",4]],["fdbresult",6]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["databaseoption",4]],[[],["fdbdatabase",3]],[[]],[[]],[[],["fdbresult",6,[["fdbtransaction",3]]]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["i32",15],["i64",15]]],[[]],[[]],[[]],[[]],[[["databaseoption",4]],["fdbresult",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["fdberror",3]],[[]],[[],["i32",15]],[[["fdberror",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["fdberror",3]],["bool",15]],[[["i32",15]],["fdberror",3]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["fdbresult",6]],[[]],[[]],[[]],[[],["bool",15]],[[["pin",3,[["fdbfuture",3]]],["context",3]],["poll",4,[["fdbresult",6]]]],[[["pin",3,[["fdbstreamkeyvalue",3]]],["context",3]],["poll",4,[["option",4,[["fdbresult",6,[["keyvalue",3]]]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4,[["option",4,[["result",4]]]]]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[],["key",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["streamingmode",4]],[[],["range",3]],[[],["rangeoptions",3]],[[]],[[]],[[]],[[],["rangeoptions",3]],[[],["key",3]],[[["streamingmode",4]],["bool",15]],[[["range",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["i32",15]],[[],["streamingmode",4]],[[],["bool",15]],[[]],[[]],[[]],[[["rangeoptions",3]],["fdbstreamkeyvalue",3]],[[["range",3]],["bool",15]],[[],["range",3]],[[["i32",15]]],[[["streamingmode",4]]],[[["bool",15]]],[[],["range",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[],["subspace",3]],[[]],[[["subspace",3]],["ordering",4]],[[["bytes",3]],["bool",15]],[[["subspace",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[["subspace",3]],["bool",15]],[[["bytes",3]],["subspace",3]],[[],["bytes",3]],[[["tuple",3]],["fdbresult",6,[["bytes",3]]]],[[["subspace",3]],["option",4,[["ordering",4]]]],[[["tuple",3]],["range",3]],[[["tuple",3]],["subspace",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["bytes",3]],["fdbresult",6,[["tuple",3]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["fdbresult",6]],[[],["fdbresult",6]],[[["range",3]],["fdbresult",6]],[[["range",3]],["fdbresult",6]],[[],["fdbresult",6]],[[],["fdbresult",6]],[[["range",3]],["fdbresult",6]],[[["range",3]],["fdbresult",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["range",3]]],[[["range",3]]],[[],["transactionoption",4]],[[],["mutationtype",4]],[[],["fdbtransaction",3]],[[],["fdbreadtransaction",3]],[[]],[[]],[[]],[[]],[[],["fdbfutureunit",6]],[[],["fdbfutureunit",6]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["fdbfuturemaybevalue",6]],[[]],[[],["fdbfuturemaybevalue",6]],[[],["fdbfuturemaybevalue",6]],[[],["fdbfuturecstringarray",6]],[[],["fdbfuturecstringarray",6]],[[],["fdbfuturecstringarray",6]],[[],["fdbfuturei64",6]],[[],["fdbfuturei64",6]],[[],["committedversion",3]],[[],["committedversion",3]],[[["range",3]],["fdbfuturei64",6]],[[["range",3]],["fdbfuturei64",6]],[[["range",3]],["fdbfuturei64",6]],[[],["fdbfuturekey",6]],[[["keyselector",3]],["fdbfuturekey",6]],[[["keyselector",3]],["fdbfuturekey",6]],[[["keyselector",3]],["fdbfuturekey",6]],[[["keyselector",3],["keyselector",3],["rangeoptions",3]],["fdbstreamkeyvalue",3]],[[["keyselector",3],["keyselector",3],["rangeoptions",3]],["fdbstreamkeyvalue",3]],[[["keyselector",3],["keyselector",3],["rangeoptions",3]],["fdbstreamkeyvalue",3]],[[],["fdbfuturei64",6]],[[],["fdbfuturei64",6]],[[],["fdbfuturei64",6]],[[],["transactionversionstamp",3]],[[],["transactionversionstamp",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["mutationtype",4],["bytes",3]]],[[["mutationtype",4],["bytes",3]]],[[["fdberror",3]],["fdbfutureunit",6]],[[["fdberror",3]],["fdbfutureunit",6]],[[["fdberror",3]],["fdbfutureunit",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["transactionoption",4]],["fdbresult",6]],[[["transactionoption",4]],["fdbresult",6]],[[["transactionoption",4]],["fdbresult",6]],[[["i64",15]]],[[["i64",15]]],[[["i64",15]]],[[],["fdbreadtransaction",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["fdbfutureunit",6]],[[],["fdbfutureunit",6]],null,null,null,null,null,null,null,null,null,null,null,null,[[["bigint",3]]],[[["bool",15]]],[[["bytes",3]]],[[["f32",15]]],[[["f64",15]]],[[["i16",15]]],[[["i32",15]]],[[["i64",15]]],[[["i8",15]]],[[]],[[["string",3]]],[[["tuple",3]]],[[["uuid",3]]],[[["versionstamp",3]]],[[["tuple",3]]],[[]],[[]],[[]],[[]],[[],["versionstamp",3]],[[],["tuple",3]],[[]],[[]],[[["versionstamp",3]],["ordering",4]],[[],["ordering",4]],[[["bytes",3],["u16",15]],["versionstamp",3]],[[],["tuple",3]],[[["versionstamp",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["bytes",3]],["versionstamp",3]],[[],["fdbresult",6,[["tuple",3]]]],[[["usize",15]],["fdbresult",6,[["bigint",3]]]],[[["usize",15]],["fdbresult",6,[["bool",15]]]],[[],["bytes",3]],[[["usize",15]],["fdbresult",6,[["bytes",3]]]],[[["usize",15]],["fdbresult",6,[["f32",15]]]],[[["usize",15]],["fdbresult",6,[["f64",15]]]],[[["usize",15]],["fdbresult",6,[["i16",15]]]],[[["usize",15]],["fdbresult",6,[["i32",15]]]],[[["usize",15]],["fdbresult",6,[["i64",15]]]],[[["usize",15]],["fdbresult",6,[["i8",15]]]],[[["usize",15]],["fdbresult",6]],[[["usize",15]],["fdbresult",6,[["string",3]]]],[[],["bytes",3]],[[["usize",15]],["fdbresult",6,[["tuple",3]]]],[[],["u16",15]],[[["usize",15]],["fdbresult",6,[["uuid",3]]]],[[["usize",15]],["fdbresult",6,[["versionstamp",3]]]],[[],["bool",15]],[[["u16",15]],["versionstamp",3]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],null,[[["versionstamp",3]],["bool",15]],[[],["tuple",3]],[[],["bytes",3]],[[["bytes",3]],["fdbresult",6,[["bytes",3]]]],[[["versionstamp",3]],["option",4,[["ordering",4]]]],[[],["option",4,[["ordering",4]]]],[[["bytes",3]],["range",3]],[[],["usize",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["key",3]],[[],["bool",15]],[[],["fdbresult",6,[["key",3]]]]],"p":[[4,"NetworkOption"],[3,"KeySelector"],[3,"Key"],[3,"Value"],[3,"KeyValue"],[6,"FdbResult"],[13,"LocalAddress"],[13,"ClusterFile"],[13,"TraceEnable"],[13,"TraceRollSize"],[13,"TraceMaxLogsSize"],[13,"TraceLogGroup"],[13,"TraceFormat"],[13,"TraceClockSource"],[13,"TraceFileIdentifier"],[13,"Knob"],[13,"TLSPlugin"],[13,"TLSCertBytes"],[13,"TLSCertPath"],[13,"TLSKeyBytes"],[13,"TLSKeyPath"],[13,"TLSVerifyPeers"],[13,"BuggifySectionActivatedProbability"],[13,"BuggifySectionFiredProbability"],[13,"TLSCaBytes"],[13,"TLSCaPath"],[13,"TLSPassword"],[13,"ExternalClientLibrary"],[13,"ExternalClientDirectory"],[13,"ClientThreadsPerVersion"],[13,"ClientBuggifySectionActivatedProbability"],[13,"ClientBuggifySectionFiredProbability"],[4,"DatabaseOption"],[3,"FdbDatabase"],[13,"LocationCacheSize"],[13,"MaxWatches"],[13,"MachineId"],[13,"DatacenterId"],[13,"TransactionLoggingMaxFieldLength"],[13,"TransactionTimeout"],[13,"TransactionRetryLimit"],[13,"TransactionMaxRetryDelay"],[13,"TransactionSizeLimit"],[3,"FdbError"],[3,"FdbFuture"],[3,"FdbStreamKeyValue"],[8,"FdbFutureGet"],[4,"StreamingMode"],[3,"Range"],[3,"RangeOptions"],[3,"Subspace"],[4,"TransactionOption"],[4,"MutationType"],[8,"Transaction"],[3,"FdbTransaction"],[3,"CommittedVersion"],[3,"TransactionVersionstamp"],[3,"FdbReadTransaction"],[8,"ReadTransaction"],[13,"DebugRetryLogging"],[13,"TransactionLoggingEnable"],[13,"DebugTransactionIdentifier"],[13,"TransactionLoggingMaxFieldLength"],[13,"Timeout"],[13,"RetryLimit"],[13,"MaxRetryDelay"],[13,"SizeLimit"],[13,"Tag"],[13,"AutoThrottleTag"],[3,"Tuple"],[3,"Versionstamp"]]},\
"fdb_gen":{"doc":"","t":[5],"n":["emit"],"q":["fdb_gen"],"d":[""],"i":[0],"f":[[[],["result",6]]],"p":[]},\
"fdb_options_gen":{"doc":"","t":[5],"n":["main"],"q":["fdb_options_gen"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"fdb_stacktester_630":{"doc":"","t":[13,13,13,13,13,13,13,13,13,13,13,13,13,3,4,13,13,3,4,3,4,13,13,6,13,13,13,13,17,17,17,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,12,12,11,5,11,11,11,11,11,11,11,12,11,11,11,12,12,11,11,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["BigInt","BigInt","Bool","Bool","Bytes","Bytes","Double","Double","Exec","FdbFutureKey","FdbFutureUnit","Float","Float","NonFutureStackEntry","NonFutureStackEntryItem","Null","Null","StackEntry","StackEntryItem","StackMachine","StartThreadTaskMessage","String","String","TrMap","Tuple","Tuple","Uuid","Uuid","VERBOSE","VERBOSE_INST_ONLY","VERBOSE_INST_RANGE","Versionstamp","Versionstamp","bigint_to_bool","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_watches","checked_clone","clone","clone","clone_into","clone_into","current_transaction","db","dump_stack","exec","execute_mutation","execute_read_db","execute_read_snap","execute_read_tr","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_mutation_type_string","from_streaming_mode_code","get_additional_inst_data","inst_number","inst_number","into","into","into","into","into","into","into_non_future_stack_entry","into_non_future_stack_entry_item","into_stack_entry_item","item","item","last_version","log_stack","main","new","new_transaction","pop","pop_key_range","pop_prefix_range","pop_range_options","pop_selector","prefix","process_inst","push_err","push_range","stack","start_thread_task_send","store","switch_transaction","task_finished","test_db_options","test_locality","test_tr_options","test_watches","to_owned","to_owned","tr_map","tr_name","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","verbose","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","db","prefix","start_thread_task_send","task_finished","tr_map"],"q":["fdb_stacktester_630","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fdb_stacktester_630::NonFutureStackEntryItem","","","","","","","","","fdb_stacktester_630::StackEntryItem","","","","","","","","","","","fdb_stacktester_630::StartThreadTaskMessage","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,1,2,1,2,1,2,3,1,1,1,2,0,0,1,2,0,0,0,0,1,2,0,1,2,1,2,0,0,0,1,2,4,1,2,5,6,3,4,1,2,5,6,3,4,4,1,2,5,2,5,4,4,4,4,4,4,4,4,1,2,5,6,3,4,1,2,5,6,3,4,4,4,4,5,6,1,2,5,6,3,4,6,1,2,5,6,4,4,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,2,5,4,4,1,2,5,6,3,4,1,2,5,6,3,4,1,2,5,6,3,4,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,27,27,27,27],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["bigint",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vec",3],["bool",15]]],[[],["option",4,[["stackentryitem",4]]]],[[],["nonfuturestackentryitem",4]],[[],["nonfuturestackentry",3]],[[]],[[]],[[],["fdbtransaction",3]],null,[[]],[[["bytes",3],["fdbdatabase",3],["arc",3,[["dashmap",3,[["bytes",3],["fdbtransaction",3]]]]],["sender",3],["unboundedsender",3,[["startthreadtaskmessage",4]]]]],[[["fdbtransaction",3],["bool",15],["usize",15]]],[[]],[[["fdbreadtransaction",3]]],[[["fdbtransaction",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["string",3]],["mutationtype",4]],[[["i32",15]],["streamingmode",4]],[[["tuple",3]],["stackentryitem",4]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4,[["nonfuturestackentry",3]]]],[[],["option",4,[["nonfuturestackentryitem",4]]]],[[],["stackentryitem",4]],null,null,null,[[["hashmap",3,[["usize",15],["nonfuturestackentry",3]]],["bytes",3]]],[[],["result",4,[["box",3,[["error",8]]]]]],[[["arc",3,[["dashmap",3,[["bytes",3],["fdbtransaction",3]]]]],["bytes",3],["fdbdatabase",3],["sender",3],["unboundedsender",3,[["startthreadtaskmessage",4]]],["bool",15]],["stackmachine",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["usize",15],["tuple",3]]],[[["usize",15],["fdberror",3]]],[[["usize",15],["vec",3,[["keyvalue",3]]],["option",4,[["bytes",3]]]]],null,null,[[["usize",15],["stackentryitem",4]]],[[["bytes",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"StackEntryItem"],[4,"NonFutureStackEntryItem"],[4,"StartThreadTaskMessage"],[3,"StackMachine"],[3,"NonFutureStackEntry"],[3,"StackEntry"],[13,"BigInt"],[13,"Bool"],[13,"Bytes"],[13,"Float"],[13,"Double"],[13,"String"],[13,"Tuple"],[13,"Uuid"],[13,"Versionstamp"],[13,"FdbFutureKey"],[13,"FdbFutureUnit"],[13,"BigInt"],[13,"Bool"],[13,"Bytes"],[13,"Float"],[13,"Double"],[13,"String"],[13,"Tuple"],[13,"Uuid"],[13,"Versionstamp"],[13,"Exec"]]},\
"fdb_sys":{"doc":"","t":[6,6,17,17,6,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,17,17,17,6,6,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,17,17,17,17,17,17,17,6,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,3,3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,6,6,6,6,6,6,6,6,6,6,6,3,6,6,17,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,6,5,5,5,5,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,6,6,6,6,6,6,6,6,6,11,11,11,11,11,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,6,6,6,6,6,6,6,6,12,12],"n":["FDBCallback","FDBConflictRangeType","FDBConflictRangeType_FDB_CONFLICT_RANGE_TYPE_READ","FDBConflictRangeType_FDB_CONFLICT_RANGE_TYPE_WRITE","FDBDatabase","FDBDatabaseOption","FDBDatabaseOption_FDB_DB_OPTION_DATACENTER_ID","FDBDatabaseOption_FDB_DB_OPTION_LOCATION_CACHE_SIZE","FDBDatabaseOption_FDB_DB_OPTION_MACHINE_ID","FDBDatabaseOption_FDB_DB_OPTION_MAX_WATCHES","FDBDatabaseOption_FDB_DB_OPTION_SNAPSHOT_RYW_DISABLE","FDBDatabaseOption_FDB_DB_OPTION_SNAPSHOT_RYW_ENABLE","FDBDatabaseOption_FDB_DB_OPTION_TRANSACTION_BYPASS_UNREADABLE","FDBDatabaseOption_FDB_DB_OPTION_TRANSACTION_CAUSAL_READ_RISKY","FDBDatabaseOption_FDB_DB_OPTION_TRANSACTION_INCLUDE_PORT_IN_ADDRESS","FDBDatabaseOption_FDB_DB_OPTION_TRANSACTION_LOGGING_MAX_FIELD_LENGTH","FDBDatabaseOption_FDB_DB_OPTION_TRANSACTION_MAX_RETRY_DELAY","FDBDatabaseOption_FDB_DB_OPTION_TRANSACTION_RETRY_LIMIT","FDBDatabaseOption_FDB_DB_OPTION_TRANSACTION_SIZE_LIMIT","FDBDatabaseOption_FDB_DB_OPTION_TRANSACTION_TIMEOUT","FDBErrorPredicate","FDBErrorPredicate_FDB_ERROR_PREDICATE_MAYBE_COMMITTED","FDBErrorPredicate_FDB_ERROR_PREDICATE_RETRYABLE","FDBErrorPredicate_FDB_ERROR_PREDICATE_RETRYABLE_NOT_COMMITTED","FDBFuture","FDBKeyValue","FDBMutationType","FDBMutationType_FDB_MUTATION_TYPE_ADD","FDBMutationType_FDB_MUTATION_TYPE_AND","FDBMutationType_FDB_MUTATION_TYPE_APPEND_IF_FITS","FDBMutationType_FDB_MUTATION_TYPE_BIT_AND","FDBMutationType_FDB_MUTATION_TYPE_BIT_OR","FDBMutationType_FDB_MUTATION_TYPE_BIT_XOR","FDBMutationType_FDB_MUTATION_TYPE_BYTE_MAX","FDBMutationType_FDB_MUTATION_TYPE_BYTE_MIN","FDBMutationType_FDB_MUTATION_TYPE_COMPARE_AND_CLEAR","FDBMutationType_FDB_MUTATION_TYPE_MAX","FDBMutationType_FDB_MUTATION_TYPE_MIN","FDBMutationType_FDB_MUTATION_TYPE_OR","FDBMutationType_FDB_MUTATION_TYPE_SET_VERSIONSTAMPED_KEY","FDBMutationType_FDB_MUTATION_TYPE_SET_VERSIONSTAMPED_VALUE","FDBMutationType_FDB_MUTATION_TYPE_XOR","FDBNetworkOption","FDBNetworkOption_FDB_NET_OPTION_BUGGIFY_DISABLE","FDBNetworkOption_FDB_NET_OPTION_BUGGIFY_ENABLE","FDBNetworkOption_FDB_NET_OPTION_BUGGIFY_SECTION_ACTIVATED_PROBABILITY","FDBNetworkOption_FDB_NET_OPTION_BUGGIFY_SECTION_FIRED_PROBABILITY","FDBNetworkOption_FDB_NET_OPTION_CALLBACKS_ON_EXTERNAL_THREADS","FDBNetworkOption_FDB_NET_OPTION_CLIENT_BUGGIFY_DISABLE","FDBNetworkOption_FDB_NET_OPTION_CLIENT_BUGGIFY_ENABLE","FDBNetworkOption_FDB_NET_OPTION_CLIENT_BUGGIFY_SECTION_ACTIVATED_PROBABILITY","FDBNetworkOption_FDB_NET_OPTION_CLIENT_BUGGIFY_SECTION_FIRED_PROBABILITY","FDBNetworkOption_FDB_NET_OPTION_CLIENT_THREADS_PER_VERSION","FDBNetworkOption_FDB_NET_OPTION_CLUSTER_FILE","FDBNetworkOption_FDB_NET_OPTION_DISABLE_CLIENT_STATISTICS_LOGGING","FDBNetworkOption_FDB_NET_OPTION_DISABLE_LOCAL_CLIENT","FDBNetworkOption_FDB_NET_OPTION_DISABLE_MULTI_VERSION_CLIENT_API","FDBNetworkOption_FDB_NET_OPTION_ENABLE_RUN_LOOP_PROFILING","FDBNetworkOption_FDB_NET_OPTION_ENABLE_SLOW_TASK_PROFILING","FDBNetworkOption_FDB_NET_OPTION_EXTERNAL_CLIENT_DIRECTORY","FDBNetworkOption_FDB_NET_OPTION_EXTERNAL_CLIENT_LIBRARY","FDBNetworkOption_FDB_NET_OPTION_KNOB","FDBNetworkOption_FDB_NET_OPTION_LOCAL_ADDRESS","FDBNetworkOption_FDB_NET_OPTION_TLS_CA_BYTES","FDBNetworkOption_FDB_NET_OPTION_TLS_CA_PATH","FDBNetworkOption_FDB_NET_OPTION_TLS_CERT_BYTES","FDBNetworkOption_FDB_NET_OPTION_TLS_CERT_PATH","FDBNetworkOption_FDB_NET_OPTION_TLS_KEY_BYTES","FDBNetworkOption_FDB_NET_OPTION_TLS_KEY_PATH","FDBNetworkOption_FDB_NET_OPTION_TLS_PASSWORD","FDBNetworkOption_FDB_NET_OPTION_TLS_PLUGIN","FDBNetworkOption_FDB_NET_OPTION_TLS_VERIFY_PEERS","FDBNetworkOption_FDB_NET_OPTION_TRACE_CLOCK_SOURCE","FDBNetworkOption_FDB_NET_OPTION_TRACE_ENABLE","FDBNetworkOption_FDB_NET_OPTION_TRACE_FILE_IDENTIFIER","FDBNetworkOption_FDB_NET_OPTION_TRACE_FORMAT","FDBNetworkOption_FDB_NET_OPTION_TRACE_LOG_GROUP","FDBNetworkOption_FDB_NET_OPTION_TRACE_MAX_LOGS_SIZE","FDBNetworkOption_FDB_NET_OPTION_TRACE_ROLL_SIZE","FDBStreamingMode","FDBStreamingMode_FDB_STREAMING_MODE_EXACT","FDBStreamingMode_FDB_STREAMING_MODE_ITERATOR","FDBStreamingMode_FDB_STREAMING_MODE_LARGE","FDBStreamingMode_FDB_STREAMING_MODE_MEDIUM","FDBStreamingMode_FDB_STREAMING_MODE_SERIAL","FDBStreamingMode_FDB_STREAMING_MODE_SMALL","FDBStreamingMode_FDB_STREAMING_MODE_WANT_ALL","FDBTransaction","FDBTransactionOption","FDBTransactionOption_FDB_TR_OPTION_ACCESS_SYSTEM_KEYS","FDBTransactionOption_FDB_TR_OPTION_AUTO_THROTTLE_TAG","FDBTransactionOption_FDB_TR_OPTION_BYPASS_UNREADABLE","FDBTransactionOption_FDB_TR_OPTION_CAUSAL_READ_DISABLE","FDBTransactionOption_FDB_TR_OPTION_CAUSAL_READ_RISKY","FDBTransactionOption_FDB_TR_OPTION_CAUSAL_WRITE_RISKY","FDBTransactionOption_FDB_TR_OPTION_DEBUG_RETRY_LOGGING","FDBTransactionOption_FDB_TR_OPTION_DEBUG_TRANSACTION_IDENTIFIER","FDBTransactionOption_FDB_TR_OPTION_DURABILITY_DATACENTER","FDBTransactionOption_FDB_TR_OPTION_DURABILITY_DEV_NULL_IS_WEB_SCALE","FDBTransactionOption_FDB_TR_OPTION_DURABILITY_RISKY","FDBTransactionOption_FDB_TR_OPTION_INCLUDE_PORT_IN_ADDRESS","FDBTransactionOption_FDB_TR_OPTION_INITIALIZE_NEW_DATABASE","FDBTransactionOption_FDB_TR_OPTION_LOCK_AWARE","FDBTransactionOption_FDB_TR_OPTION_LOG_TRANSACTION","FDBTransactionOption_FDB_TR_OPTION_MAX_RETRY_DELAY","FDBTransactionOption_FDB_TR_OPTION_NEXT_WRITE_NO_WRITE_CONFLICT_RANGE","FDBTransactionOption_FDB_TR_OPTION_PRIORITY_BATCH","FDBTransactionOption_FDB_TR_OPTION_PRIORITY_SYSTEM_IMMEDIATE","FDBTransactionOption_FDB_TR_OPTION_READ_AHEAD_DISABLE","FDBTransactionOption_FDB_TR_OPTION_READ_LOCK_AWARE","FDBTransactionOption_FDB_TR_OPTION_READ_SYSTEM_KEYS","FDBTransactionOption_FDB_TR_OPTION_READ_YOUR_WRITES_DISABLE","FDBTransactionOption_FDB_TR_OPTION_REPORT_CONFLICTING_KEYS","FDBTransactionOption_FDB_TR_OPTION_RETRY_LIMIT","FDBTransactionOption_FDB_TR_OPTION_SERVER_REQUEST_TRACING","FDBTransactionOption_FDB_TR_OPTION_SIZE_LIMIT","FDBTransactionOption_FDB_TR_OPTION_SNAPSHOT_RYW_DISABLE","FDBTransactionOption_FDB_TR_OPTION_SNAPSHOT_RYW_ENABLE","FDBTransactionOption_FDB_TR_OPTION_SPECIAL_KEY_SPACE_RELAXED","FDBTransactionOption_FDB_TR_OPTION_TAG","FDBTransactionOption_FDB_TR_OPTION_TIMEOUT","FDBTransactionOption_FDB_TR_OPTION_TRANSACTION_LOGGING_ENABLE","FDBTransactionOption_FDB_TR_OPTION_TRANSACTION_LOGGING_MAX_FIELD_LENGTH","FDBTransactionOption_FDB_TR_OPTION_USED_DURING_COMMIT_PROTECTION_DISABLE","FDBTransactionOption_FDB_TR_OPTION_USE_PROVISIONAL_PROXIES","FDB_API_VERSION","FDB_database","FDB_future","FDB_transaction","INT16_MAX","INT16_MIN","INT32_MAX","INT32_MIN","INT8_MAX","INT8_MIN","INTPTR_MAX","INTPTR_MIN","INT_FAST16_MAX","INT_FAST16_MIN","INT_FAST32_MAX","INT_FAST32_MIN","INT_FAST8_MAX","INT_FAST8_MIN","INT_LEAST16_MAX","INT_LEAST16_MIN","INT_LEAST32_MAX","INT_LEAST32_MIN","INT_LEAST8_MAX","INT_LEAST8_MIN","PTRDIFF_MAX","PTRDIFF_MIN","SIG_ATOMIC_MAX","SIG_ATOMIC_MIN","SIZE_MAX","UINT16_MAX","UINT32_MAX","UINT8_MAX","UINTPTR_MAX","UINT_FAST16_MAX","UINT_FAST32_MAX","UINT_FAST8_MAX","UINT_LEAST16_MAX","UINT_LEAST32_MAX","UINT_LEAST8_MAX","WINT_MAX","WINT_MIN","_ATFILE_SOURCE","_BITS_STDINT_INTN_H","_BITS_STDINT_UINTN_H","_BITS_TIME64_H","_BITS_TYPESIZES_H","_BITS_TYPES_H","_BITS_WCHAR_H","_DEFAULT_SOURCE","_FEATURES_H","_POSIX_C_SOURCE","_POSIX_SOURCE","_STDC_PREDEF_H","_STDINT_H","_SYS_CDEFS_H","__FD_SETSIZE","__GLIBC_MINOR__","__GLIBC_USE_DEPRECATED_GETS","__GLIBC_USE_DEPRECATED_SCANF","__GLIBC_USE_IEC_60559_BFP_EXT","__GLIBC_USE_IEC_60559_BFP_EXT_C2X","__GLIBC_USE_IEC_60559_FUNCS_EXT","__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X","__GLIBC_USE_IEC_60559_TYPES_EXT","__GLIBC_USE_ISOC2X","__GLIBC_USE_LIB_EXT2","__GLIBC__","__GNU_LIBRARY__","__HAVE_GENERIC_SELECTION","__INO_T_MATCHES_INO64_T","__KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64","__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI","__OFF_T_MATCHES_OFF64_T","__RLIM_T_MATCHES_RLIM64_T","__STATFS_MATCHES_STATFS64","__STDC_IEC_559_COMPLEX__","__STDC_IEC_559__","__STDC_ISO_10646__","__SYSCALL_WORDSIZE","__TIMESIZE","__USE_ATFILE","__USE_FORTIFY_LEVEL","__USE_ISOC11","__USE_ISOC95","__USE_ISOC99","__USE_MISC","__USE_POSIX","__USE_POSIX199309","__USE_POSIX199506","__USE_POSIX2","__USE_POSIX_IMPLICITLY","__USE_XOPEN2K","__USE_XOPEN2K8","__WORDSIZE","__WORDSIZE_TIME64_COMPAT32","__blkcnt64_t","__blkcnt_t","__blksize_t","__caddr_t","__clock_t","__clockid_t","__daddr_t","__dev_t","__fsblkcnt64_t","__fsblkcnt_t","__fsfilcnt64_t","__fsfilcnt_t","__fsid_t","__fsword_t","__gid_t","__glibc_c99_flexarr_available","__id_t","__ino64_t","__ino_t","__int16_t","__int32_t","__int64_t","__int8_t","__int_least16_t","__int_least32_t","__int_least64_t","__int_least8_t","__intmax_t","__intptr_t","__key_t","__loff_t","__mode_t","__nlink_t","__off64_t","__off_t","__pid_t","__quad_t","__rlim64_t","__rlim_t","__sig_atomic_t","__socklen_t","__ssize_t","__suseconds64_t","__suseconds_t","__syscall_slong_t","__syscall_ulong_t","__time_t","__timer_t","__u_char","__u_int","__u_long","__u_quad_t","__u_short","__uid_t","__uint16_t","__uint32_t","__uint64_t","__uint8_t","__uint_least16_t","__uint_least32_t","__uint_least64_t","__uint_least8_t","__uintmax_t","__useconds_t","__val","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","fdb_add_network_thread_completion_hook","fdb_bool_t","fdb_create_database","fdb_database_create_transaction","fdb_database_destroy","fdb_database_set_option","fdb_error_predicate","fdb_error_t","fdb_future_block_until_ready","fdb_future_cancel","fdb_future_destroy","fdb_future_get_error","fdb_future_get_int64","fdb_future_get_key","fdb_future_get_keyvalue_array","fdb_future_get_string_array","fdb_future_get_value","fdb_future_is_ready","fdb_future_release_memory","fdb_future_set_callback","fdb_get_client_version","fdb_get_error","fdb_get_max_api_version","fdb_network_set_option","fdb_run_network","fdb_select_api_version_impl","fdb_setup_network","fdb_stop_network","fdb_transaction_add_conflict_range","fdb_transaction_atomic_op","fdb_transaction_cancel","fdb_transaction_clear","fdb_transaction_clear_range","fdb_transaction_commit","fdb_transaction_destroy","fdb_transaction_get","fdb_transaction_get_addresses_for_key","fdb_transaction_get_approximate_size","fdb_transaction_get_committed_version","fdb_transaction_get_estimated_range_size_bytes","fdb_transaction_get_key","fdb_transaction_get_range","fdb_transaction_get_read_version","fdb_transaction_get_versionstamp","fdb_transaction_on_error","fdb_transaction_reset","fdb_transaction_set","fdb_transaction_set_option","fdb_transaction_set_read_version","fdb_transaction_watch","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","int_fast16_t","int_fast32_t","int_fast64_t","int_fast8_t","int_least16_t","int_least32_t","int_least64_t","int_least8_t","intmax_t","into","into","into","into","into","key","key_length","keyvalue","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","uint_fast16_t","uint_fast32_t","uint_fast64_t","uint_fast8_t","uint_least16_t","uint_least32_t","uint_least64_t","uint_least8_t","uintmax_t","value","value_length"],"q":["fdb_sysdi":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,1,2,3,4,5,0,0,0,0,0,0,0,0,0,1,2,3,4,5,5,5,0,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,0,0,0,0,0,0,0,0,0,5,5],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["__fsid_t",3]],[[],["fdb_future",3]],[[],["fdb_database",3]],[[],["fdb_transaction",3]],[[],["keyvalue",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"__fsid_t"],[3,"FDB_future"],[3,"FDB_database"],[3,"FDB_transaction"],[3,"keyvalue"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};